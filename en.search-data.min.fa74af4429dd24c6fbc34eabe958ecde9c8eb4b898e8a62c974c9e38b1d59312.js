'use strict';(function(){const b={cache:!0};b.doc={id:'id',field:['title','content'],store:['title','href','section']};const a=FlexSearch.create('balance',b);window.bookSearchIndex=a,a.add({id:0,href:'/labathome.de/elektrotechnik/',title:"Electrical Engineering",section:"Welcome",content:"Electronics #  Auf dieser Seite geht es um meine erste große Passion, die Elektrotechnik.\nLos geht es mit einer Einleitung, wie ich zur Hochspannungstechnik kam.\nSchon in jungen Jahren interessierte ich mich für dieses Thema und lernte an der nahegelegenen Fachhochschule einen Ingenieur kennen, der dort zusammen mit einem Professor Experimentalvorträge der \u0026ldquo;alten Schule\u0026rdquo; zu Themen wie elektrischen Ladungen, Gewitterblitzen, Tesla-Strömen und der Geschichte der Elektrizität hielt.\nAngeregt und fasziniert von den spektakulären Versuchen baute ich, zunächst mit einigem Ungeschick, die gezeigten Experimente nach. Das war 2005. Im Laufe der Jahre entwickelten sich natürlich auch die Geräte weiter, aus Fehlern lernt man bekanntermaßen am besten.\nSo entstanden dann einige Tesla-Transformatoren und die Zubehör- und Betriebsgeräte, wie ein 20A-Steuerpult, sowie ein kleiner Stoßspannungsgenerator. Alle Geräte sind mit dem Ziel vor Augen entworfen und gebaut, transportabel und vorführbar zu sein. Gleichzeitig soll das äußere Aussehen allein bereits Zweifel an der Betriebssicherheit der Apparate zerstreuen, sodass alle Geräte mechanisch und elektrisch solide aufgebaut wurden.\nWeiter geht es mit dem Computerbasteln.\nUm im nach und nach entstehenden Elektronik-/Hochspannungslabor auch automatisierte Messungen vornehmen zu können und u.a. die Lichtanlage im \u0026ldquo;Partykeller\u0026rdquo; zu steuern, baute ich nach und nach Erweiterungen für den PC. So entstand z.B. nach einem Schaltplan aus einer Zeitschrift eine Schaltung, die, an den Parallelport des PC angeschlossen und per QBasic gesteuert, 8 Reed-Relais steuern kann und damit bsp. für die Umschaltung eines Messkanals verwendet werden kann.\nUnter Verwendung eines AD7874 entstand eine Schaltung zur Überwachung unserer defekten Heizungssteuerung. Der AD-Wandler wurde mit einer 71055-Karte im PC von einem Turbo-C-Programm angesteuert und die Messdaten zur weiteren Auswertung in eine Textdatei geschrieben.\nAllerdings erweckten auch andere Computer als die PCs mein Interesse, so unter anderem die SGI-Workstations, die 68000er-Familie von Motorola (die ich in Form von Würfelmacs und dem Atari ST kennenlernte), die Transputer in Form von AVM-ISDN-Geräten und den HD63484, von dem ich einige Stangen auf einem Bastlertreffen ergattern konnte. Auch die AVR-Mikrocontroller und neuerdings die ARM-Controller regten mein Interesse an. Nur im Menü zuletzt braucht man natürlich Programmiergeräte, um die vielfältigen Speicher und Controller zu programmieren; hier bin ich neuerdings an einen c\u0026rsquo;t-EPROP gekommen, der (eines Tages mit einer neuen Software) wohl in Zukunft alle meine Probleme in dieser Hinsicht lösen wird und nebenbei auch GALs programmieren und auslesen kann.\nDiese Tätigkeiten sind nicht unbemerkt geblieben und so hat es sich ergeben, dass ich für gut 2 Jahre eine Elektronik-AG an meinem Gymnasium geleitet habe, in der Schüler/-innen der 5. und 6. Klassen für die Elektronik begeistert wurden. Ausserdem habe ich nach dem Tod des o.g. Professors mich an der Fachhochschule engagiert, um die von mir oft gehörten Experimentalvorträge weiterleben zu lassen. So hat es sich ergeben, dass ich den Vortrag \u0026ldquo;Faszination Elektrotechnik\u0026rdquo; mittlerweile viermal gehalten habe, in dem es für die Öffentlichkeit eine Vorführung der wichtigsten Experimente der Physik-II-Vorlesung aus dem Physikstudium zu erleben gibt; ein alternativer Titel für diesen Vortrag wäre \u0026ldquo;Vom Bernstein zur elektromagnetischen Welle\u0026rdquo;.\n"}),a.add({id:1,href:'/labathome.de/elektrotechnik/transputer/',title:"Transputer",section:"Electrical Engineering",content:"Transputer #  "}),a.add({id:2,href:'/labathome.de/about/',title:"About this website",section:"Welcome",content:"This website is created using the Hugo static website generator.\nI chose the hugo-book theme.\nYou can contact me via email: jonathan.schilling@mail.de\n"}),a.add({id:3,href:'/labathome.de/elektrotechnik/transputer/amv_b1/',title:"AVM B1",section:"Transputer",content:"AVM B1 #  Der AVM B1 ist ein aktiver ISDN-Controller und bis Version 2.0 für den ISA-Bus gebaut. Bis Version 3.0 wird ein Transputer vom Typ T400 verwendet.\nAuf der linken Seite der Karte findet sich ein kleines Transputer-System mit 1MB RAM sowie einem TRAM-ähnlichen Erweiterungsinterface. Rechts unten auf der Karte sitzt der C011, der auf den 4 jumperbaren Adressen vom ISA-Bus aus angesprochen werden kann. Der C011 ist auf der B1 fest auf Link 0 des T400 verdrahtet. Die Links sind von AVM auf der Platine auf 10MBit/s verdrahtet.\nAn diesem B1 habe ich nun einige Modifikationen vorgenommen:\nZuerst wurde die Linkgeschwindigkeit des C011 auf 20MBit hochgesetzt:\nDazu wird Pin 17 mittels eines spitzen Werkzeugs, ich habe hier eine feine Messspitze verwendet, hochgebogen und auf +5V verdrahtet, z.B. Pin 28 des C011.\nNun muss natürlich auch die Linkgeschwindigkeit des T400 angepasst werden:\nDas ist leider ein bisschen kniffliger, da der T400 einen noch geringeren Pinabstand besitzt als der C011. Es müssen die Pins 8, 9 und 11 hochgebogen und auf +5V gelegt werden, z.B. an dem 1µF-Kondensator, der direkt neben dem T400 aufgelötet ist und zur Pufferung der internen Versorgungsspannung des Link-Interfaces vom T400 dient.\nWeiterhin ist es, wie sich später zeigen wird, praktisch, den RESET-Pin auch am Erweiterungsbus anliegen zu haben. Der Pin 2 ist für die Funktion des B1 nicht weiter von Belang und kann daher an der markierten Stelle durchtrennt werden und mit einem Draht an Pin 92 des T400, resp. einer nahen Durchkontaktierung, angelötet werden.\nDie Pinbelegung, soweit ausgemessen, des Erweiterungsbusses ist dann wie folgt:\n   Pin Bedeutung Pin Bedeutung     1 ? 11 ? (PAL)   2 RESET 12 ? (PAL)   3 ? (82525) 13 GND   4 ? (82525) 14 GND   5 ? (82525) 15 GND   6 ? 16 GND   7 ? 17 GND   8 Link1Out 18 +5V   9 Link1In 19 +5V   10 ? 20 +5V    Spätestens jetzt sollte mit ispy überprüft werden, ob die Karte noch korrekt arbeitet und falls nicht, mit der Fehlersuche begonnen werden.\nEs mag sich nun der eine oder andere fragen, wozu all diese Modifikationen durchgeführt werden sollen.\nDa der B1 sich auf Adr. 0x150 ansprechen lässt und sich darauf wie eine Inmos B004 Transputer-Entwicklungskarte verhält, bietet der B1 daher eine sehr günstige und direkte Transputer-Einstiegskarte. Wenn nun Link 1, der auf den Erweiterungsbus gelegt ist (s.o.), nach \u0026ldquo;draußen\u0026rdquo; führt, kann man dort weitere Transputer(netze) anschließen, z.B. den AVM T1(-B, wenn vorhanden).\nDazu braucht es jedoch einen RS-422-Konverter, der auf den B1 aufgesteckt wird:\nBei Maxim bekommt als kostenlose Samples zwei MAX3467. Es handelt sich dabei um RS-422-Konverter für bis zu 40MBit/s, also mehr als ausreichend für die Transputer-Links. Diese werden nun anhand der nachfolgenden Schaltskizze verdrahtet, am besten auf einer Lochraster-Platine. Der 15-pol. D-SUB-Stecker ist dabei kein Muss, aber da ich für die Verbidung zum T1 das originale Kabel verwende, habe ich hier einen verwendet. Das Pinout des Kabels findet sich, ebenso wie weitere Informationen zum T1, auf der entsprechenden Unterseite.\n"}),a.add({id:4,href:'/labathome.de/elektrotechnik/transputer/avm_t1/',title:"AVM T1",section:"Transputer",content:"AVM T1 #  Der AVM T1 ist ein ISDN-Controller, der in den 90ern des letzten Jahrhunderts dazu diente, Server mit ISDN-Anschluss von der Last der ISDN-Verwaltung zu befreien. Ähnliche Geräte oder Steckkarten für PCs bauten auch andere Firmen, wie z.B. Hermstedt und Eicon. Gemeinsamer Nenner aller dieser \u0026ldquo;interessanten\u0026rdquo; Geräte ist, dass sie teilweise mehrere eigene Mini-Computer mit eigenem Prozessor, eigenem RAM und eigener Peripherie \u0026ldquo;an Bord\u0026rdquo; haben. Dieser Ansatz war damals vermutlich günstiger, als spezielle ASICs für jede Einzelentwicklung herzustellen.\nBeim Start des Rechners wurde meißt der Prozessor angehalten, sodass der Host-PC ungestörten Zugriff auf das RAM des Mini-Computers hatte. Sodann lud der Treiber die Firmware in das RAM der Karte/des Geräts und startete den Prozessor. Über z.B. dual-ported-RAM wurde dann die Kommunikation und der Datenaustausch zwischen Host und Mini-Computer abgewickelt.\nDer AVM T1 verwendet in erster Ausbaustufe (\u0026ldquo;T1\u0026rdquo;) 3 Transputer (zwei T400, ein T425) mit insgesamt 9MB D-RAM und verfügt zusätzlich über den Munich32-ISDN-Controller. Der \u0026ldquo;T1-B\u0026rdquo;, bei dem das \u0026ldquo;B\u0026rdquo; für Booster Board steht, verfügt über 4 weitere Transputer vom Typ ST20450 mit je 2MB D-RAM, sodass dieses Gerät dann insgesamt über 7 Transputer mit 17MB D-RAM verfügt.\nAls ich auf der exzellenten Seite www.geekdot.com vom T1 las, war mein Interesse geweckt. Ich hatte vorher schon vom Konzept des Transputers gehört, aber das was ich dort sah, versprach ein ähnliches Erlebnis wie die Leonardo XL zu werden.\nAls ich meinen ersten T1 dann von eBay bekam, habe ich zuerst das Gehäuse geöffnet und mal die Platinen begutachtet. Die Bezeichnungen der Bauteile decken sich mit denen, die Axel Muhr auf seiner Seite zum T1 verwendet.\nDie Transputer auf der Platine sind so verdrahtet, wie auf folgendem Schema zu sehen ist:\nEin Kästchen ist jeweils ein Transputer bzw. größerer Chip, die Zahlen an den Kanten der Transputer bezeichnen den jeweiligen Link.\nDie Interface-Beschaltung rund um den \u0026ldquo;Host Con\u0026rdquo; und den \u0026ldquo;Diag Con\u0026rdquo; ist auf folgender Zeichnung zu sehen. Hier gibt es den EAGLE-Schaltplan, aus dem das Bild generiert wurde und hier die dazugehörige EAGLE-Lib mit AM26C31 und AM26C32.\nDie Bezeichnungen der Widerstände und Dioden im Schaltplan sind nach folgenden Bildern gemacht:\nMeinen Messungen nach ist an jedem Error-Ausgang der Transputer eine kleine grüne LED nach Masse angeschlossen. Die Anschlussbelegung des \u0026ldquo;BB-Con\u0026rdquo;, der Verbindung zum Booster-Board, ist hier aufgezeichnet:\nund hier gibt es den EAGLE-Schaltplan dazu.\nIn der Frontplatte des T1 sitzt eine lange Platine, die die Front-LEDs sowie ein paar Schieberegister trägt. Es handelt sich dabei um 5 Stk. 74HC595. Die Platine besitzt zwei Stecker, einen für die Stromversorgung und einen, über den die Daten gehen. Die Belegung des Stromversorgungsstecker ist folgende:\n   Pin Bedeutung     1 n.c.   2 +5V   3 GND   4 n.c.    Die Power-LED ist über einen 470 Ohm-Widerstand direkt an +5V angeschlossen. Die Belegung des Datensteckers ist weiterhin:\n   Pin Bedeutung Ziel Pin     1 n.c.     2 n.c.     3 n.c. FPGA1 17   4 /OE aller HC595 FPGA1 67   5 n.c. FPGA1 20   6 Data In, Reihenfolge s.u. FPGA1 30   7 Storage Clock (STCP) FPGA1 46   8 Shift Clock (SHCP) FPGA1 33   9 n.c.     10 n.c.      Das anzuzeigende Muster wird zunächst seriell in den Anschluss \u0026ldquo;Data In\u0026rdquo;, Pin 6, geladen, wobei Pin 8 (Shift Clock) als Takt verwendet wird. Dann wird mit einer steigenden Flanke an Pin 7 (Storage Clock) das gelesende Muster in die Ausgangs-Register übernommen. Wenn nun /OE (Pin 4) auf Low gezogen wird, wird das Muster angezeigt.\nDie Reihenfolge der LEDs ist folgende:\nZuerst in LEDs 1 bis 30, dann die System LED, dann die D-Channel-LED und zuletzt die Sync-LED. Als nächstes ist noch herauszufinden, wie die Daten von einem der Transputer auf die Front-Schnittstelle gelangen.\nNach einiger Zeit sah ich bei eBay einen weiteren T1, der diesmal mit der PC-Interface-Karte verkauft wurde. Für schmales Geld wechselte er den Besitzer und hier sehen Sie ein Bild der ISA-Interface-Karte für den T1:\nEs handelt sich hierbei offensichtlich um eine Karte, die nicht von AVM entworfen wurde. Vielmehr scheint hier die Firma hema Elektronik GmbH ihre Finger im Spiel zu haben, denn zum Stichwort \u0026ldquo;hema TA2\u0026rdquo; (siehe die obere rechte Platinenecke) finden sich Verweise auf eine \u0026ldquo;ISA zu RS422-Link-Adapter-Karte\u0026rdquo;. Interessant an der Karte ist, dass sie neben je einem Inmos C011 und C012 einen Xilinx CPLD beherbergt, der offensichtlich für die Verwaltung des \u0026ldquo;Linkbus\u0026rdquo; (lt. Platinenaufdruck auf der Unterseite) zuständig ist. Mal sehen, was sich dahinter verbirgt\u0026hellip;\nAnsonsten sind auf der Karte noch 4 TRAM-Steckplätze vorhanden, wobei ich noch nicht ausgemessen habe, wie die untereinander und mit den C011/C012 verschaltet sind.\nIn dem 8-poligen DIL-IC mit dem Aufkleber \u0026ldquo;V1A\u0026rdquo; steckt ein Two-Wire-PROM von Xilinx, dass vermutlich die Konfiguration des XC3030A-CPLDs enthält. Wenn man dies entschlüsselt bekäme, wäre es vermutlich möglich, den Aufbau des Linkbus zu verstehen und eine Anwendung dafür zu finden\u0026hellip;\n21.03.2013: Update #  Die Belegung des Verbindungskabels zwischen T1 und Hostcard ist wie folgt:\n   Pin-Nr. T1 (D-Sub 9) Pin-Nr. TA2 (D-Sub 15)     1 15   2 n.c.   3 11   4 n.c.   5 1   6 7   7 3   8 6   9 9   Abschirmung Abschirmung, 2   n.c. 4   n.c. 5   n.c. 8   n.c. 12   n.c. 13    Im DOS-Treiber zum AVM T1 gibt es ein Programm names CTA2.EXE, das in diesem Zusammenhang von Interesse ist. Allein der Name lässt schon auf die Funktion schließen: Control TA2. Dadurch fand ich heraus, dass diese Karte einiges mehr kann, als ich zuerst vermutete: Es gibt ja den C011 und den C012. Der C011 wird als \u0026ldquo;Fast Link\u0026rdquo; bezeichnet, der über die beiden FIFO-RAMs gepuffert wird. Der C012 wird als \u0026ldquo;Slow Link\u0026rdquo; bezeichnet und verfügt über keinen FIFO. Der \u0026ldquo;Slow Link\u0026rdquo; ist fest auf die untere 15-polige D-Sub-Buchse, als \u0026ldquo;CON4\u0026rdquo; bezeichnet, geschaltet. Die obere Buchse, als \u0026ldquo;CON2\u0026rdquo; bezeichnet, kann wahlweise auf die TRAMs/den Linkbus oder den C011 geschaltet werden, und zwar per Software. Weiterhin lässt sich per Software die Linkgeschwindigkeit der C011/C012 und der TRAMs einstellen. Darüberhinaus bietet CTA2.EXE die Möglichkeit, die externen Anschlüsse zu testen. Das lässt sich natürlich prima dazu verwenden, die geratene Pinbelegung zu verifizieren:\n   Pin Bedeutung     1 pos. RS-422 LinkIn   9 neg. RS-422 LinkIn   7 pos. RS-422 LinkOut   15 neg. RS-422 LinkOut   3 pos. RS-422 /Reset Out   11 neg. RS-422 /Reset Out   4 pos. RS-422 /Error In   12 neg. RS-422 /Error In   5 pos. RS-422 /Analyse Out   13 neg. RS-422 /Analyse Out   8 +5V, wenn J-VCC2/4 auf \u0026ldquo;ON\u0026rdquo;, n.c. wenn auf \u0026ldquo;OFF\u0026rdquo;   2 GND   6 GND   10 GND   14 GND    Dazu wird ein 15-pol. Stecker mit folgender Belegung gebraucht:\n   Test Nr. Verbindung Pins     1 LinkIn \u0026lt;\u0026ndash;\u0026gt; LinkOut 1 \u0026ndash; 7   1 LinkIn \u0026lt;\u0026ndash;\u0026gt; LinkOut 9 \u0026ndash; 15   2 /Reset \u0026lt;\u0026ndash;\u0026gt; /Error 3 \u0026ndash; 4   2 /Reset \u0026lt;\u0026ndash;\u0026gt; /Error 11 \u0026ndash; 12   3 /Analyse \u0026lt;\u0026ndash;\u0026gt; /Error 5 \u0026ndash; 4   3 /Analyse \u0026lt;\u0026ndash;\u0026gt; /Error 13 \u0026ndash; 12    Damit lässt sich nun auch die Belegung der TTL-CON-Stecker auf der Karte bestimmen:\n   Pin Bedeutung     1 LinkIn   2 GND   3 GND   4 LinkOut   5 /Error In   6 /Analyse Out   7 GND   8 /Reset Out   9 +5V   10 +5V    Als nächstes habe ich dann die Verschaltung der TRAM-Sockel ausgemesse, wobei dies noch nicht abgeschlossen ist. Die blauen Kästchen sind jeweils ein Slot, die Zahlen an den Kanten markieren die Link-Nr. der jeweiligen Verbindung.\n"}),a.add({id:5,href:'/labathome.de/elektrotechnik/leonardo_xl/',title:"Leonardo XL PCI",section:"Electrical Engineering",content:"Leonardo XL PCI #  Sie werden den älteren Mac-Benutzern wohl bekannt sein: die Leonardo-ISDN-Karten der (inzwischen insolventen) Firma Hermstedt.\nDurch Zufall entdeckte ich in einer eBay-Auktion eine Leonardo XL-PCI V1.3, die augenscheinlich einen 68000er enthielt. Das musste sofort untersucht werden!\nAlso flugs das Teil für ein paar Euro zusammen mit einer Pentium I-PC-Compatibility-Card für PowerMacs geordert und analysiert:\nIn diesem Bild sind die ISDN-Übertrager bereits heruntergelötet, um die Sub-D-Buchsen für andere Zwecke verwenden zu können. Ebenfalls wurde bereits ein Stück Präzisionssockel für J7 eingelötet, um das Config-EEPROM auslesen zu können und man kann das grüne Kabel sehen, dass den ehemals unbelegten Pin am Erweiterungsport mit dem Pin A23 des 68HC001 verbindet, um den gesamten Addressraum von 16MB am Erweiterungsport zur Verfügung zu haben.\nEs handelt sich dabei um ein komplettes 68k-System mit folgenden Komponenten:\n   Komponente Funktion Bezeichnung auf der Karte     HAL-9001-MW-95 FPGA für PCI-Interface IC1   AT17C65 I²C-EEPROM (24Cxx-komp.) für FPGA-Config IC2   MC68HC001FN16 16MHz-68000er mit 8/16-Bit Bus IC3   KM681000BLG-7 2 Stk: 128kx16 SRAM IC4(ODD), IC5(EVEN)   MC68681FN DUART mit Quarz 3.686MHz IC6   PEB2086N ISAC (ISDN-Controller) IC7, IC9   SAB82525N HSCX (SCC) IC8, IC10   grüne LED eine grüne LED am Pin OP6 von IC6 D25    Des weiteren verfügt die Karte über einen Erweiterungsbus, der dem PDS der älteren Macs ähnelt.\nSoweit ich ihn ausgemessen habe, hat er die in diesem Calc-Dokument hinterlegte Belegung.\nDann hat sich mittels einer Sitzung mit PonyProg und einem fliegenden Aufbau der SI-Prog-Hardware das Config-EEPROM geöffnet und folgende Konfigurationsdatei ausgespuckt:\n FPGA-Config-EEPROM als Binary FPGA-Config-EEPROM als Textzeile  Leider ist mir völlig unklar, um was für ein FPGA es sich hierbei handeln könnte und meine diesbezüglichen Anfragen an die Firma GAFICON, die in DE den Vertrieb für die Firma Pro2Col, den Aufkäufer von Hermstedt, übernimmt, blieben noch unbeantwortet.\nDann war es an der Zeit, mal ein bisschen mit der Software herumzuspielen. Die Originaltreiber bekommt man immer noch mittels der Wayback Machine von einem Backup der Hermstedt-Seite. Ich habe mir dann den Windows 95-Treiber heruntergeladen und mal entpackt. Es finden sich ein paar unwichtige Dateien, aber auch ein paar Binaries, z.B. die Dateien HermWAN.sys und LeoFW.bin.\nInsbesondere der Name der letzten Datei hat bei mir heftigste Assoziationen hervorgerufen :-). Also mal im Hex-Editor angeschaut: In den ersten beiden 32-Bit-Worten stehen die Werte 0x400 und 0x4AC, wobei in der Datei ab 0x400 der Code losgeht. Wie man aus dem 68000-User-Manual weiß, sind das der Initial Program Counter und Supervisor Stack Pointer! Damit ist schon mal klar, dass diese Datei offensichtlich \u0026ldquo;unten\u0026rdquo; in das On-Board-RAM geladen und von dort direkt gestartet wird. Ausserdem ist bekannt, dass an den Adressen von 0x8 bis 0x3FC die Exception Table steht. Sie liegt somit vollständig im RAM und kann daher bei Verwendung eigener Firmware beliebig verändert werden! Sehr praktisch\u0026hellip;\nAlso habe ich die Firmware mal durch IDA Pro gejagt, und siehe da, man hat vor dem Hochladen des Treiber vergessen, die Debug-Symbole in der Firmware zu entfernen :-). Also ist es ein leichtes, die Funktionen zuzuordnen und ein kommentiertes Listing zu erstellen: Firmware-Disassembly.\nEbenfalls der Windows-Treiber HermWAN.sys wurde nicht von den Debug-Symbolen bereinigt, sodass dieser ebenfalls gegenüber IDA Pro machtlos ist. Da es sich hierbei um x86-Code handelt, funktioniert sogar HexRays Decompiler, um Pseudocode zu erstellen :-).\nDas Interessanteste an dem Windows-Treiber ist die Möglichkeit, mittels SoftICE, einem Windows-Debugger, sich dann beim Laden des Treibers beim Rechnerstart einzuklinken und mit einem Oszilloskop am Reset-Pin des 68HC001 zu schauen, was in welche Register geschrieben werden muss, um den Reset zu deaktivieren und den 68HC001 zu starten. Da der Reset-Pin auf den Erweiterungsport geführt ist, muss man dazu nicht mal an der Karte selbst rumlöten :-).\nSo und mittels lspci von Linux findet man dann raus, dass die Karte 1MByte des PCI-Adressraums belegt und die Control-Register in den oberen 512kByte, genauer ab 0x80000 im Karten-Adressraum, liegen.\nDamit lässt sich schon mal ein Linux-Kernel-Modul schreiben, dass beim Laden den Reset deaktiviert und beim Entladen ihn wieder aktiviert: leodrv. Im Quellcode finden sich auch Angaben zu der genauen Position der Register.\nDas ist im Moment der Stand der Dinge; Weiteres folgt sobald wieder Zeit für dieses interessante Projekt vorhanden ist.\n"})})()